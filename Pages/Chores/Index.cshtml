@page
@model ChoreMgr.Pages.Chores.IndexModel

@{
    ViewData["Title"] = "Chores";
}
<script>
    console.log("onload called"); // Do not send to your backend! Use an ID token instead.
    document.cookie = "yo=yoyo";
</script>
<h1>Chores </h1>
    <div style="float: left">
        <a asp-page="./Journal">Summary: @Model.Summary</a> <br />
        Pending: @Model.Pending <br />
        <a asp-page="Create">Create New</a>
    </div>

    <div style="float: right">
        @if (Model.IsDebug)
        {
            <a asp-page-handler="ProdSync">Prod Sync</a>  <br />
        }
        <a asp-page-handler="Backup">Backup</a>  <br />
        <form method="post">
                <input asp-for="ExcludeList" class="form-control" />
                <span asp-validation-for="ExcludeList" class="text-danger"></span>
                <input type="submit" value="Update" class="btn btn-primary" />
        </form>
    </div>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.JobList[0].Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.JobList[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.JobList[0].Category)
            </th>
            <th style="text-align:center;">
                @Html.DisplayNameFor(model => model.JobList[0].IntervalDays)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.JobList[0].LastDone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.JobList[0].NextDo)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.JobList) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td style=@item.WebStyle>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td style="text-align:center;">
                @Html.DisplayFor(modelItem => item.Category)
            </td>
            <td style="text-align:center;">
                @Html.DisplayFor(modelItem => item.IntervalDays)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastDone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NextDo)
            </td>
            <td>
                <a asp-page-handler="Today" asp-route-id="@item.Id">Today</a>
                <a asp-page-handler="Yesterday" asp-route-id="@item.Id">Yest</a>
                <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a>
            </td>
        </tr>
}
    </tbody>
</table>
@Model.ContextName
    